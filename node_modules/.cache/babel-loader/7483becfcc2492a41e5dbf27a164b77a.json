{"ast":null,"code":"var _jsxFileName = \"/Users/wangchuang/files/react_antd/antd-demo-ts/src/router/index.tsx\";\nimport React, { Component } from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport coreSysRoutes from './coreSys'; // 核心系统路由文件\n\nconst routeList = [...coreSysRoutes]; // 路由集合\n// 生成路由文件\n\nconst toDoRoures = routeArr => {\n  return routeArr.map(items => {\n    if (items.children) {\n      // 有子路由\n      const childrenRoutes = toDoRoures(items.children);\n      return childrenRoutes;\n    } else if (items.redirect) {\n      const component = () => /*#__PURE__*/React.createElement(Redirect, {\n        to: items.redirect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 37\n        }\n      });\n\n      return /*#__PURE__*/React.createElement(Route, {\n        path: items.path,\n        exact: true,\n        component: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 20\n        }\n      });\n    } else {\n      const component = items.component || React.Fra;\n      return /*#__PURE__*/React.createElement(Route, {\n        exact: items.exact,\n        path: items.path,\n        key: items.path,\n        component: component,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 20\n        }\n      });\n    }\n  });\n};\n\nexport default class Routes extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(HashRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, toDoRoures(routeList)));\n  }\n\n}","map":{"version":3,"sources":["/Users/wangchuang/files/react_antd/antd-demo-ts/src/router/index.tsx"],"names":["React","Component","HashRouter","Switch","Route","Redirect","coreSysRoutes","routeList","toDoRoures","routeArr","map","items","children","childrenRoutes","redirect","component","path","Fra","exact","Routes","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAA4BC,KAA5B,EAAmCC,QAAnC,QAAkD,kBAAlD;AACA,OAAOC,aAAP,MAA0B,WAA1B,C,CAAuC;;AACvC,MAAMC,SAAS,GAAG,CAAC,GAAGD,aAAJ,CAAlB,C,CAAsC;AAEtC;;AACA,MAAME,UAAU,GAAIC,QAAD,IAAmB;AAElC,SAAOA,QAAQ,CAACC,GAAT,CAAcC,KAAD,IAAgB;AAChC,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAAE;AAClB,YAAMC,cAAc,GAAGL,UAAU,CAACG,KAAK,CAACC,QAAP,CAAjC;AACA,aAAOC,cAAP;AACH,KAHD,MAGO,IAAIF,KAAK,CAACG,QAAV,EAAoB;AACvB,YAAMC,SAAS,GAAG,mBAAM,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAEJ,KAAK,CAACG,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;;AACA,0BAAO,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAEH,KAAK,CAACK,IAAnB;AAAyB,QAAA,KAAK,MAA9B;AAA+B,QAAA,SAAS,EAAED,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAHM,MAGA;AACH,YAAMA,SAAS,GAAGJ,KAAK,CAACI,SAAN,IAAmBf,KAAK,CAACiB,GAA3C;AACA,0BAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEN,KAAK,CAACO,KAApB;AAA2B,QAAA,IAAI,EAAEP,KAAK,CAACK,IAAvC;AAA6C,QAAA,GAAG,EAAEL,KAAK,CAACK,IAAxD;AAA8D,QAAA,SAAS,EAAED,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ,GAXM,CAAP;AAYH,CAdD;;AAiBA,eAAe,MAAMI,MAAN,SAAqBlB,SAArB,CAA+B;AAC1CmB,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKZ,UAAU,CAACD,SAAD,CADf,CADG,CAAP;AAKH;;AAPyC","sourcesContent":["import React, { Component } from 'react'\nimport {HashRouter, Switch, Route, Redirect} from 'react-router-dom'\nimport coreSysRoutes from './coreSys'; // 核心系统路由文件\nconst routeList = [...coreSysRoutes]; // 路由集合\n\n// 生成路由文件\nconst toDoRoures = (routeArr: any) => {\n\n    return routeArr.map((items: any) => {\n        if (items.children) { // 有子路由\n            const childrenRoutes = toDoRoures(items.children);\n            return childrenRoutes;\n        } else if (items.redirect) {\n            const component = () => <Redirect to={items.redirect} />\n            return <Route path={items.path} exact component={component}></Route>\n        } else {\n            const component = items.component || React.Fra;\n            return <Route exact={items.exact} path={items.path} key={items.path} component={component}></Route>\n        }\n    })\n}\n\n\nexport default class Routes extends Component {\n    render() {\n        return <HashRouter>\n            <Switch>\n                {toDoRoures(routeList)}\n            </Switch>\n        </HashRouter>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}