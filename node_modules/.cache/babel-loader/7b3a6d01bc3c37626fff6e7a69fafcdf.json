{"ast":null,"code":"var _jsxFileName = \"/Users/wangchuang/files/react_antd/antd-demo-ts/src/router/index.tsx\";\nimport React, { Component } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport coreSysRoutes from './coreSys'; // 核心系统路由文件\n\nconst routeList = [...coreSysRoutes]; // 路由集合\n// 生成路由文件\n\nconst toDoRoures = routeArr => {\n  return routeArr.map(items => {\n    if (items.children) {// 有子路由\n    } else if (items.redirect) {// 重定向的\n    } else {}\n\n    const component = items.component;\n    return /*#__PURE__*/React.createElement(Route, {\n      exact: items.exact,\n      path: items.path,\n      key: items.path,\n      component: component,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    });\n  });\n};\n\nexport default class Routes extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(HashRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, toDoRoures(routeList)));\n  }\n\n}","map":{"version":3,"sources":["/Users/wangchuang/files/react_antd/antd-demo-ts/src/router/index.tsx"],"names":["React","Component","HashRouter","Switch","Route","coreSysRoutes","routeList","toDoRoures","routeArr","map","items","children","redirect","component","exact","path","Routes","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAA4BC,KAA5B,QAAwC,kBAAxC;AACA,OAAOC,aAAP,MAA0B,WAA1B,C,CAAuC;;AACvC,MAAMC,SAAS,GAAG,CAAC,GAAGD,aAAJ,CAAlB,C,CAAsC;AAEtC;;AACA,MAAME,UAAU,GAAIC,QAAD,IAAmB;AAElC,SAAOA,QAAQ,CAACC,GAAT,CAAcC,KAAD,IAAgB;AAChC,QAAIA,KAAK,CAACC,QAAV,EAAoB,CAAE;AAErB,KAFD,MAEO,IAAID,KAAK,CAACE,QAAV,EAAoB,CAAE;AAE5B,KAFM,MAEA,CAEN;;AACD,UAAMC,SAAS,GAAGH,KAAK,CAACG,SAAxB;AACA,wBAAO,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAEH,KAAK,CAACI,KAApB;AAA2B,MAAA,IAAI,EAAEJ,KAAK,CAACK,IAAvC;AAA6C,MAAA,GAAG,EAAEL,KAAK,CAACK,IAAxD;AAA8D,MAAA,SAAS,EAAEF,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAVM,CAAP;AAWH,CAbD;;AAgBA,eAAe,MAAMG,MAAN,SAAqBf,SAArB,CAA+B;AAC1CgB,EAAAA,MAAM,GAAG;AACL,wBAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,UAAU,CAACD,SAAD,CADf,CADG,CAAP;AAKH;;AAPyC","sourcesContent":["import React, { Component } from 'react'\nimport {HashRouter, Switch, Route} from 'react-router-dom'\nimport coreSysRoutes from './coreSys'; // 核心系统路由文件\nconst routeList = [...coreSysRoutes]; // 路由集合\n\n// 生成路由文件\nconst toDoRoures = (routeArr: any) => {\n\n    return routeArr.map((items: any) => {\n        if (items.children) { // 有子路由\n\n        } else if (items.redirect) { // 重定向的\n\n        } else {\n\n        }\n        const component = items.component;\n        return <Route exact={items.exact} path={items.path} key={items.path} component={component}></Route>\n    })\n}\n\n\nexport default class Routes extends Component {\n    render() {\n        return <HashRouter>\n            <Switch>\n                {toDoRoures(routeList)}\n            </Switch>\n        </HashRouter>\n    }\n}\n"]},"metadata":{},"sourceType":"module"}